#!/bin/bash
#
# https://github.com/smoser/talk-simplestreams/blob/master/bin/u-stool

# If this tool is running in a snap we should update the path to use when
# querying the ubuntu-cloudimage-keyring
SNAP_PATH=${SNAP:-""}

declare -A sdata
CIU_COM="http://cloud-images.ubuntu.com"
CIU_COM_R="$CIU_COM/releases"
CIU_COM_D="$CIU_COM/daily"
MU_COM="http://maas.ubuntu.com/images/ephemeral-v2"
MAAS_v2="http://images.maas.io/ephemeral-v2"
MAAS_v3="http://images.maas.io/ephemeral-v3"
CST="https://swift.canonistack.canonical.com/v1/AUTH_a48765cc0e864be980ee21ae26aaaed4"
SST="http://10.245.160.50:80/swift/v1/simplestreams/data/streams/v1/index.json"
sdata=(
  [uc-release]="$CIU_COM_R/streams/v1/index.sjson"
  [uc-aws]="$CIU_COM_R/streams/v1/com.ubuntu.cloud:released:aws.sjson"
  [uc-aws-daily]="$CIU_COM_D/streams/v1/com.ubuntu.cloud:daily:aws.sjson"
  [uc-aws-daily-minimal]="$CIU_COM/minimal/daily/streams/v1/com.ubuntu.cloud:daily:aws.sjson"
  [uc-aws-release-minimal]="$CIU_COM/minimal/releases/streams/v1/com.ubuntu.cloud:released:aws.sjson"
  [uc-aws-cn-release]="$CIU_COM_R/streams/v1/com.ubuntu.cloud:released:aws-cn.sjson"
  [uc-azure]="$CIU_COM_R/streams/v1/com.ubuntu.cloud:released:azure.sjson"
  [uc-azure-daily]="$CIU_COM_D/streams/v1/com.ubuntu.cloud:daily:azure.sjson"
  [uc-azure-release]="$CIU_COM_R/streams/v1/com.ubuntu.cloud:released:azure.sjson"
  [uc-gce-daily]="$CIU_COM_D/streams/v1/com.ubuntu.cloud:daily:gce.sjson"
  [uc-gce-daily-minimal]="$CIU_COM/minimal/daily/streams/v1/com.ubuntu.cloud:daily:gce.sjson"
  [uc-gce-release-minimal]="$CIU_COM/minimal/releases/streams/v1/com.ubuntu.cloud:released:gce.sjson"
  [uc-gce]="$CIU_COM_R/streams/v1/com.ubuntu.cloud:released:gce.sjson"
  [uc-dl]="$CIU_COM_R/streams/v1/com.ubuntu.cloud:released:download.sjson"
  [uc-daily]="$CIU_COM/daily/streams/v1/index.sjson"
  [uc-dl-daily]="$CIU_COM/daily/streams/v1/com.ubuntu.cloud:daily:download.sjson"
  [uc-dl-daily-minimal]="$CIU_COM/minimal/daily/streams/v1/com.ubuntu.cloud.daily:download.sjson"
  [uc-dl-release-minimal]="$CIU_COM/minimal/releases/streams/v1/com.ubuntu.cloud.released:download.sjson"

  [maas-release]="$MAAS_v2/releases/streams/v1/index.sjson"
  [maas-daily]="$MAAS_v2/daily/streams/v1/index.sjson"
  [maas-eph-rel]="$MAAS_v2/releases/streams/v1/com.ubuntu.maas:v2:download.sjson"
  [maas-eph-daily]="$MAAS_v2/daily/streams/v1/com.ubuntu.maas:daily:v2:download.sjson"

  [maas3-daily]="$MAAS_v3/daily/streams/v1/index.sjson"
  [maas3-eph-daily]="$MAAS_v3/daily/streams/v1/com.ubuntu.maas:daily:v3:download.sjson"

  [cirros]="http://download.cirros-cloud.net/streams/v1/index.json"
  [cstack]="$CST/simplestreams/data/streams/v1/index.json"
  [sstack]="$SST"
  [smoser-images]="http://smoser.brickies.net/image-streams/streams/v1/index.json"
)

SPROG="sstream-query"
case "$0" in
   *smirror) SPROG="sstream-mirror";;
   *squery|*\-stool) SPROG="sstream-query";;
   *)
      echo "Expect to be called usmirror or usquery, not ${0##*/}";
      exit 1;;
esac

error() { echo "$@" 1>&2; }
fail() { [ $# -eq 0 ] || error "$@"; exit 1; }
Usage() {
   cat <<EOF
Usage: ${0##*/} name options opt
   a friendly wrapper to $SPROG.

Name must be one of:
EOF
   for i in "${!sdata[@]}"; do
      printf "%-12s %s\n"  "$i" "${sdata[$i]}"
   done | sort
}

name=""
url=""
dry=false
for i in "$@"; do
   case "$i" in
      --help) { Usage; exit 0; };;
      --dry-run) dry=true;;
      ---dry-run) opts[${#opts[@]}]="--dry-run";;
      images)
         opts[${#opts[@]}]="--output-format=%(version_name)s %(id)s %(pubname)s"
         args[${#args[@]}]="datatype=image-ids";;
      -*) opts[${#opts[@]}]="$i";;
      *)
         # the first argument is 'name'
         if [ -z "$name" ]; then
             name="$i"
             [ -n "${sdata[$name]}" ] ||
                fail "unknown name $name. see '--help' for list"
             url=${sdata[$name]}
             i="$url"
         fi
         args[${#args[@]}]="$i"
         ;;
   esac
done

[ -n "$name" ] || { Usage 1>&2; exit 1; }

keyopt=""
case "$url" in
   *.json) :;;
   *) keyopt="--keyring=${SNAP_PATH}/usr/share/keyrings/ubuntu-cloudimage-keyring.gpg";;
esac

cmd=( "$SPROG" ${keyopt:+"${keyopt}"} "${opts[@]}" "${args[@]}" )

$dry && echo "${cmd[@]}" && exit

"${cmd[@]}"
